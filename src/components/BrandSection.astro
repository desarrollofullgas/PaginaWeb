---
const { title } = Astro.props;

// Define TypeScript interface for props
interface Props {
  title: string;
}
---

<section
  class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
>
  <!-- Title -->
  <div
    class="mx-auto mb-6 w-full space-y-1 text-center sm:w-1/2 lg:w-1/3 wrapper"
  >
    <h2
      class="text-balance text-xl font-bold leading-tight text-neutral-300 sm:text-3xl"
    >
      {title}
    </h2>
  </div>
  <div class="wrapper flex flex-wrap items-center justify-center gap-y-2 sm:flex-wrap sm:gap-8">
    
      <img src="src/img/about/toptier_gray.png" class="w-[250px] item item1" alt="" />
    
    
      <img src="src/img/about/fullgas_gray.png" class="w-[250px] item item2" alt="" />
    
    
      <img src="src/img/about/aditivo_gray.png" class="w-[250px] item item3" alt="" />
    
    
      <img src="src/img/about/fulltaxi_gray.png" class="w-[250px] item item4" alt="" />
    
    
      <img src="src/img/about/fullfamily_gray.png" class="w-[250px] item item5" alt="" />
    
  </div>
</section>
<style>
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  * {
    margin: 0;
  }

  .wrapper {
    width: 100%;
    max-width: 1536px;
    margin-inline: auto;
    position: relative;
    height: 150px;
    overflow: hidden;
    mask-image: linear-gradient(
      to right,
      rgba(0, 0, 0, 0),
      rgba(0, 0, 0, 1) 20%,
      rgba(0, 0, 0, 1) 80%,
      rgba(0, 0, 0, 0)
    );
  }

  @keyframes scrollLeft {
    to {
      left: -200px;
    }
  }

  .item {
    border-radius: 6px;
    position: absolute;
    left: max(calc(400px * 8), 100%);
    animation-name: scrollLeft;
    animation-duration: 25s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  }

  .item1 {
    animation-delay: calc(30s / 8 * (8 - 1) * -1);
  }

  .item2 {
    animation-delay: calc(30s / 8 * (8 - 2) * -1);
  }

  .item3 {
    animation-delay: calc(30s / 8 * (8 - 3) * -1);
  }

  .item4 {
    animation-delay: calc(30s / 8 * (8 - 4) * -1);
  }

  .item5 {
    animation-delay: calc(30s / 8 * (8 - 5) * -1);
  }
</style>
